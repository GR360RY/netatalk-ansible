---
- hosts: all

  user: vagrant      # User to access your machine over ssh that has sudo permittions
  sudo: yes

  vars:

    # Dirs below will be created as root. Please make permission/ownership change to be able to write to those folders.
    shares_list:
      - { name: 'Shared Data', path: '/tank/Media' }
      - { name: 'Downloads', path: '/tank/Downloads' }

    tm_volume: { name: 'Time Machine', path: '/tank/TM'}

    ubuntu_packages:
      - build-essential
      - libssl-dev
      - libgcrypt11-dev
      - libkrb5-dev
      - libpam0g-dev
      - libwrap0-dev
      - libdb-dev
      - libavahi-client-dev
      - libacl1-dev
      - libldap2-dev
      - libcrack2-dev
      - systemtap-sdt-dev
      - libdbus-1-dev
      - libdbus-glib-1-dev
      - libglib2.0-dev
      - libevent-dev
      - avahi-daemon

    packager: apt
    netatalk_version: netatalk-3.0.5
    source_location: /usr/local/src

  tasks:
    - name: Get ssh user name
      sudo: no
      gather_facts: no
      shell: echo "$USER"
      register: ansible_ssh_user
    - name: Install packages required for compilation
      action: $packager pkg={{ item }} state=latest update_cache=yes
      with_items: ubuntu_packages
    - name: Download {{ netatalk_version }} tarball
      get_url: url=http://prdownloads.sourceforge.net/netatalk/{{ netatalk_version }}.tar.gz?download dest=/tmp/{{ netatalk_version }}.tar.gz
    - name: Extract tarball
      command: /bin/tar xf /tmp/{{ netatalk_version }}.tar.gz -C {{ source_location }} creates={{ source_location }}/{{ netatalk_version }}/.successfully_build_by_ansible
    - name: Compile and install {{ netatalk_version }}
      command: "{{ item }}"
      with_items:
      - ./configure --with-init-style=debian --with-cracklib --enable-krbV-uam --without-libevent --with-pam-confdir=/etc/pam.d --with-dbus-sysconf-dir=/etc/dbus-1/system.d chdir=/usr/local/src/{{ netatalk_version }} creates=.successfully_build_by_ansible
      - make chdir={{ source_location }}/{{ netatalk_version }} creates=.successfully_build_by_ansible
      - make install chdir={{ source_location }}/{{ netatalk_version }} creates=.successfully_build_by_ansible
      - touch .successfully_build_by_ansible chdir={{ source_location }}/{{ netatalk_version }} creates=.successfully_build_by_ansible
    - name: Configure AFP Shares
      template: src=templates/usr_local_src_etc_afp.conf.j2 dest=/usr/local/etc/afp.conf backup=yes
      notify:
      - restart netatalk
    - name: Configure Avahi Service
      template: src=templates/etc_avahi_services_afpd.service.j2 dest=/etc/avahi/services/afpd.service backup=yes
      notify:
      - restart avahi
    - name: Verify existance of afp share folders
      file: path={{ item.path }} state=directory
      with_items: shares_list
    - name: Verify existance of Time Machine Volume and set permissions accordingly
      file: path={{ tm_volume.path }} state=directory mode=774
    - name: Enable Netatalk Service
      service: name=netatalk state=started enabled=yes pattern=/usr/local/sbin/netatalk
    - name: Enable Avahi Service
      service: name=avahi-daemon state=started enabled=yes

  handlers:
    - name: restart netatalk
      service: name=netatalk state=restarted
    - name: restart avahi
      service: name=avahi-daemon state=restarted
