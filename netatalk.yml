---
- hosts: all

  user: vagrant      # User to access your machine over ssh that has sudo permittions
  sudo: yes

  vars_files:
    - "vars/user_defined.yml"
    - "vars/{{ ansible_os_family }}.yml"
    - "vars/{{ ansible_distribution }}.{{ ansible_distribution_version }}.yml"

  roles:
    - { role: vagrant-change-hostname, when: vm_hostname is defined }

  tasks:
    - name: Get ssh user name
      shell: echo "$SUDO_USER"
      register: playbook_user
      changed_when: "playbook_user.rc != 0"
    - name: Install OS Family packages required for compilation
      action: $ansible_pkg_mgr pkg={{ item }} state=latest cache_valid_time=3600 update_cache=yes
      with_items: os_family_packages
    - name: Install Distro specific packages required for compilation
      action: $ansible_pkg_mgr pkg={{ item }} state=latest
      with_items: distro_specific_packages
      when: distro_specific_packages is defined
    - name: Download {{ netatalk_version }} tarball
      get_url: url=http://prdownloads.sourceforge.net/netatalk/{{ netatalk_version }}.tar.gz?download dest=/tmp/{{ netatalk_version }}.tar.gz
    - name: Extract tarball
      command: /bin/tar xf /tmp/{{ netatalk_version }}.tar.gz -C {{ source_location }} creates={{ source_location }}/{{ netatalk_version }}/.successfully_build_by_ansible
    - name: Compile and install {{ netatalk_version }}
      command: "{{ item }}"
      with_items:
      - ./configure --with-init-style=debian --with-cracklib --enable-krbV-uam --without-libevent --with-pam-confdir=/etc/pam.d --with-dbus-sysconf-dir=/etc/dbus-1/system.d chdir=/usr/local/src/{{ netatalk_version }} creates=.successfully_build_by_ansible
      - make chdir={{ source_location }}/{{ netatalk_version }} creates=.successfully_build_by_ansible
      - make install chdir={{ source_location }}/{{ netatalk_version }} creates=.successfully_build_by_ansible
      - touch .successfully_build_by_ansible chdir={{ source_location }}/{{ netatalk_version }} creates=.successfully_build_by_ansible
    - name: Configure AFP Shares
      template: src=templates/usr_local_src_etc_afp.conf.j2 dest=/usr/local/etc/afp.conf backup=yes
      notify:
      - restart netatalk
    - name: Configure Avahi Service
    template: src=templates/etc_avahi_services_afpd.service.j2 dest=/etc/avahi/services/afpd.service backup=yes owner=avahi group=root mode=0774
      notify:
      - restart avahi
    - name: Verify existance of afp share folders
      file: path={{ item.path }} state=directory owner={{ playbook_user.stdout }}
      with_items: shares_list
      when: shares_list is defined
    - name: Verify existance of Time Machine Volume and set permissions accordingly
      file: path={{ tm_volume.path }} state=directory owner={{ playbook_user.stdout }} mode=774
    - name: Enable Netatalk Service
      service: name=netatalk state=started enabled=yes
    - name: Enable Avahi Service
      service: name=avahi-daemon state=started enabled=yes

  handlers:
    - name: restart netatalk
      service: name=netatalk state=restarted
    - name: restart avahi
      service: name=avahi-daemon state=restarted
