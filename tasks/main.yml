---
# tasks file for netatalk-ansible

- name: Load Platform Specific Variables
  include_vars: "{{ item }}"
  with_items:
    - "{{ ansible_os_family }}.yml"
    - "{{ ansible_distribution }}.yml"

- name: Install OS Family packages required for compilation
  apt: pkg={{ item }} state=latest cache_valid_time=3600 update_cache=yes
  with_items: os_family_packages
  tags:
    - install_requirements

- name: Install Distro specific packages required for compilation
  apt: pkg={{ item }} state=latest cache_valid_time=3600 update_cache=yes
  with_items: distro_specific_packages
  when: distro_specific_packages is defined
  tags:
    - install_requirements

- name: Display netatalk version being installed
  debug: var=netatalk_version

- name: Download Netatalk tarball
  get_url: url=http://prdownloads.sourceforge.net/netatalk/{{ netatalk_version }}.tar.gz?download dest=/tmp/{{ netatalk_version }}.tar.gz
  tags:
    - tarball_installation

- name: Extract tarball
  command: /bin/tar xf /tmp/{{ netatalk_version }}.tar.gz -C {{ source_location }} creates={{ source_location }}/{{ netatalk_version }}/.successfully_build_by_ansible
  tags:
    - tarball_installation

- name: Run ./configure before compilation
  command: ./configure --with-init-style=debian-sysv --with-cracklib --enable-krbV-uam --without-libevent --with-pam-confdir=/etc/pam.d --with-dbus-sysconf-dir=/etc/dbus-1/system.d creates=.successfully_build_by_ansible chdir=/usr/local/src/{{ netatalk_version }}
  tags:
    - tarball_installation

- name: Compile Netatalk
  command: make chdir={{ source_location }}/{{ netatalk_version }} creates=.successfully_build_by_ansible
  tags:
    - tarball_installation

- name: Install Netatalk Binaries
  command: make install chdir={{ source_location }}/{{ netatalk_version }} creates=.successfully_build_by_ansible
  tags:
    - tarball_installation

- name: Configure AFP Shares
  template: src=templates/usr_local_src_etc_afp.conf.j2 dest=/usr/local/etc/afp.conf backup=yes
  notify:
    - restart netatalk
  tags:
    - configure_services

- name: Configure Avahi Service
  template: src=templates/etc_avahi_services_afpd.service.j2 dest=/etc/avahi/services/afpd.service backup=yes owner=avahi group=root mode=0774
  notify:
    - restart avahi
  tags:
    - configure_services

- name: Verify existance of afp share folders
  file: path={{ item.path }} state=directory owner=root
  with_items: shares_list
  when: shares_list is defined
  tags:
    - create_folders

- name: Verify existance of Time Machine Volume and set permissions accordingly
  file: path={{ tm_volume.path }} state=directory owner=root mode=774
  tags:
    - create_folders

- name: Enable Netatalk Service
  service: name=netatalk state=started enabled=yes
  tags:
    - start_services

- name: Enable Avahi Service
  service: name=avahi-daemon state=started enabled=yes
  tags:
    - start_services